@font-face {
  font-family: 'Days One';
  src: url('../src/fonts/DaysOne-Regular.woff2') format('woff2'),
      url('../src/fonts/DaysOne-Regular.woff') format('woff'),
      url('../src/fonts/DaysOne-Regular.svg#DaysOne-Regular') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: fallback;
}

@font-face {
  font-family: 'Oswald';
  src: url('../src/fonts/Oswald-Medium.woff2') format('woff2'),
      url('../src/fonts/Oswald-Medium.woff') format('woff'),
      url('../src/fonts/Oswald-Medium.svg#Oswald-Medium') format('svg');
  font-weight: 500;
  font-style: normal;
  font-display: fallback;
}

$fontHeading: 'Days One';
$fontContent: 'Oswald';
$blue: #161a39;
$red: #f54242;
$black: #070a1b;

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}